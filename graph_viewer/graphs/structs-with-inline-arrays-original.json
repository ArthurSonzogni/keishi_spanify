{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1232:::68:::struct GTestCases {\u0000    int val;\u0000  };\u0000const auto gTestCases = std::to_array<GTestCases, 4>({{1}, {2}, {3}, {4}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 1,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1232:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 2,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1528:::65:::struct Knights {\u0000    int val;\u0000  };\u0000const auto knights = std::to_array<Knights, 4>({{1}, {2}, {3}, {4}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 3,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1528:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 4,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1796:::56:::struct funcHasName {\u0000    int val;\u0000  };\u0000std::array<funcHasName, 4> funcNamedBuffer",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 5,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1796:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 6,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1941:::42:::std::array<funcHasName, 4> funcNamedBufferButNotInline",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 7,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1941:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 8,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2158:::76:::struct FuncBuffer2 {\u0000    int val;\u0000  };\u0000static const auto func_buffer2 = std::to_array<FuncBuffer2>({{1}, {2}, {3}, {4}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 9,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2158:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 10,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2386:::62:::struct FuncBufferWithComment {\u0000    int val;  // Comment\u0000  };\u0000std::array<FuncBufferWithComment, 4> funcBufferWithComment",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 11,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2386:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 12,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2652:::57:::class UnnamedClassBuffer {\u0000   public:\u0000    int val;\u0000  };\u0000std::array<UnnamedClassBuffer, 4> unnamedClassBuffer",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 13,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2652:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 14,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2917:::62:::union UnnamedUnionBuffer {\u0000    int val;\u0000    float fval;\u0000  };\u0000std::array<UnnamedUnionBuffer, 4> unnamedUnionBuffer",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 15,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2917:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 16,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3156:::75:::struct NestedStructBuffer {\u0000    struct {\u0000      int val;\u0000    } inner;\u0000  };\u0000std::array<NestedStructBuffer, 4> nestedStructBuffer",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 17,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3156:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 18,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::731:::40:::struct FuncBuffer {\u0000    int val;\u0000  };\u0000std::array<FuncBuffer, 4> func_buffer",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 19,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::731:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 20,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::927:::68:::struct TestCases {\u0000    int val;\u0000  };\u0000const auto kTestCases = std::to_array<TestCases, 4>({{1}, {2}, {3}, {4}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 21,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::927:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 7
        },
        {
            "source": 8,
            "target": 9
        },
        {
            "source": 10,
            "target": 11
        },
        {
            "source": 12,
            "target": 13
        },
        {
            "source": 14,
            "target": 15
        },
        {
            "source": 16,
            "target": 17
        },
        {
            "source": 18,
            "target": 19
        },
        {
            "source": 20,
            "target": 21
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <tuple>\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808) Handle this case.\nstruct {\n  int val;\n} globalBuffer[4];\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808) Handle this case.\nstruct GlobalHasName {\n  int val;\n} globalNamedBuffer[4];\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808) Handle this case.\nGlobalHasName globalNamedBufferButNotInline[4];\n\nvoid fct() {\n  // Expected rewrite\n  // struct FuncBuffer {\n  //   int val;\n  // };\n  // std::array<FuncBuffer, 4> func_buffer;\n  struct {\n    int val;\n  } func_buffer[4];\n\n  // Expected rewrite:\n  // struct TestCases {\n  //   int val;\n  // };\n  // const auto kTestCases = std::to_array<TestCases, 4>({{1}, {2}, {3}, {4}});\n  const struct {\n    int val;\n  } kTestCases[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = kTestCases[2].val;  // Unsafe access to trigger spanification.\n\n  // Expected rewrite:\n  // struct GTestCases {\n  //   int val;\n  // };\n  // const auto gTestCases = std::to_array<GTestCases, 4>({{1}, {2}, {3}, {4}});\n  const struct {\n    int val;\n  } gTestCases[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = gTestCases[2].val;  // Unsafe access to trigger spanification.\n\n  // Expected rewrite:\n  // struct Knights {\n  //   int val;\n  // };\n  // const auto knights = std::to_array<Knights, 4>({{1}, {2}, {3}, {4}});\n  const struct {\n    int val;\n  } knights[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = knights[2].val;  // Unsafe access to trigger spanification.\n\n  // Expected rewrite:\n  // struct funcHasName {\n  //   int val;\n  // };\n  // std::array<funcHasName, 4> funcNamedBuffer;\n  struct funcHasName {\n    int val;\n  } funcNamedBuffer[4];\n\n  // Expected rewrite:\n  // std::array<funcHasName, 4> funcNamedBufferButNotInline;\n  funcHasName funcNamedBufferButNotInline[4];\n\n  // Expected rewrite:\n  // struct FuncBuffer2 {\n  //   int val;\n  // };\n  // static const auto func_buffer2 =\n  //     std::to_array<FuncBuffer2>({{1}, {2}, {3}, {4}});\n  static const struct {\n    int val;\n  } func_buffer2[] = {{1}, {2}, {3}, {4}};\n\n  // Expected rewrite\n  // struct FuncBufferWithComment {\n  //   int val; // Comment\n  // };\n  // std::array<FuncBuffer, 4> funcBufferWithComment;\n  struct {\n    int val;  // Comment\n  } funcBufferWithComment[4];\n\n  // Classes can also be used in a similar way.\n  // Expected rewrite\n  // class UnnamedClassBuffer {\n  //  public:\n  //   int val;\n  // };\n  // std::array<UnnamedClassBuffer, 4> unnamedClassBuffer;\n  class {\n   public:\n    int val;\n  } unnamedClassBuffer[4];\n\n  // Unions can also be used in a similar way.\n  // Expected rewrite\n  // union UnnamedUnionBuffer {\n  //   int val;\n  //   float fval;\n  // };\n  // std::array<UnnamedUnionBuffer, 4> unnamedUnionBuffer;\n  union {\n    int val;\n    float fval;\n  } unnamedUnionBuffer[4];\n\n  // Expected rewrite\n  // struct NestedStructBuffer {\n  //   struct {\n  //     int val;\n  //   } inner;\n  // };\n  // std::array<NestedStructBuffer, 3> nestedStructBuffer;\n  struct {\n    struct {\n      int val;\n    } inner;\n  } nestedStructBuffer[4];\n\n  // Buffer accesses to trigger spanification.\n  func_buffer[2].val = 3;\n  globalBuffer[2].val = 3;\n  funcNamedBuffer[2].val = 3;\n  globalNamedBuffer[2].val = 3;\n  globalNamedBufferButNotInline[2].val = 3;\n  funcNamedBufferButNotInline[3].val = 3;\n  (void)func_buffer2[2].val;\n  funcBufferWithComment[2].val = 3;\n  unnamedClassBuffer[2].val = 3;\n  unnamedUnionBuffer[2].val = 3;\n  nestedStructBuffer[2].inner.val = 3;\n}\n",
        "file_path": "/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/structs-with-inline-arrays-original.cc"
    }
}