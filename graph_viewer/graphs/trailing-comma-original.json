{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1066:::52:::auto a_5 = std::to_array<A, 5>({{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10},})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 1,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1066:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 2,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1353:::97:::auto a_5_long = std::to_array<A, 5>({\u0000      {1, 2}, {3, 4}, aggregate_with_very_very_very_long_name, {7, 8}, {9, 10},})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 3,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1353:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 4,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1671:::62:::auto a_6 = std::to_array<A, 6>({{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}, {11, 12},})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 5,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1671:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 6,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1963:::88:::auto a_6_with_new_line = std::to_array<A, 6>({\u0000    {1, 2}, {3, 4}, {5, 6},\u0000    {7, 8}, {9, 10}, {11, 12},\u0000  })",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 7,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::1963:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 8,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::2282:::83:::auto a_5_with_trailing_comma = std::to_array<A, 5>({\u0000      {1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10},\u0000  })",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 9,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::2282:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 10,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::2604:::114:::auto a_5_with_trailing_comma_2 = std::to_array<A, 5>({\u0000       {1, 2},\u0000       {3, 4},\u0000       {5, 6},\u0000       {7, 8},\u0000       {9, 10},\u0000  })",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 11,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::2604:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 12,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::353:::19:::auto a_1 = std::to_array<A, 1>({{1, 2}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 13,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::353:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 14,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::491:::27:::auto a_2 = std::to_array<A, 2>({{1, 2}, {3, 4}})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 15,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::491:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        },
        {
            "id": 16,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::747:::117:::auto a_2_long = std::to_array<A, 2>({aggregate_with_very_very_very_long_name,\u0000                   aggregate_with_very_very_very_long_name})",
            "is_buffer": "1",
            "size_info_available": "1",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "1",
                "original_size_info_available": "1"
            },
            "data_change_lhs": -1
        },
        {
            "id": 17,
            "replacement": "r:::/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc:::747:::0:::",
            "is_buffer": "0",
            "size_info_available": "0",
            "is_deref_node": "0",
            "is_data_change": "0",
            "visited": true,
            "debug_info": {
                "added_to_component": true,
                "original_is_buffer": "0",
                "original_size_info_available": "0"
            },
            "data_change_lhs": -1
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 7
        },
        {
            "source": 8,
            "target": 9
        },
        {
            "source": 10,
            "target": 11
        },
        {
            "source": 12,
            "target": 13
        },
        {
            "source": 14,
            "target": 15
        },
        {
            "source": 16,
            "target": 17
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <tuple>\n\nstruct A{\n  int a;\n  int b;\n};\n\nA aggregate_with_very_very_very_long_name = {1, 2};\n\nint UnsafeIndex();\n\nvoid Test() {\n  // Expected rewrite:\n  // auto a_1 = std::to_array<A, 1>({{1, 2}});\n  A a_1[1] = {{1, 2}};\n  std::ignore = a_1[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_2 = std::to_array<A, 2>({{1, 2}, {3, 4}});\n  A a_2[2] = {{1, 2}, {3, 4}};\n  std::ignore = a_2[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_2_long =\n  //     std::to_array<A, 2>({aggregate_with_very_very_very_long_name,\n  //                          aggregate_with_very_very_very_long_name});\n  A a_2_long[2] = {aggregate_with_very_very_very_long_name,\n                   aggregate_with_very_very_very_long_name};\n  std::ignore = a_2_long[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_5 = std::to_array<A, 5>({\n  //     {1, 2},\n  //     {3, 4},\n  //     {5, 6},\n  //     {7, 8},\n  //     {9, 10},\n  // });\n  A a_5[5] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}};\n  std::ignore = a_5[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_5_long = std::to_array<A, 5>({\n  //     {1, 2},\n  //     {3, 4},\n  //     aggregate_with_very_very_very_long_name,\n  //     {7, 8},\n  //     {9, 10},\n  // });\n  A a_5_long[5] = {\n      {1, 2}, {3, 4}, aggregate_with_very_very_very_long_name, {7, 8}, {9, 10}};\n  std::ignore = a_5_long[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_6 = std::to_array<A, 6>({\n  //     {1, 2},\n  //     {3, 4},\n  //     {5, 6},\n  //     {7, 8},\n  //     {9, 10},\n  //     {11, 12},\n  // });\n  A a_6[6] = {{1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}, {11, 12}};\n  std::ignore = a_6[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_6_with_new_line = std::to_array<A, 6>({\n  //     {1, 2},\n  //     {3, 4},\n  //     {5, 6},\n  //     {7, 8},\n  //     {9, 10},\n  //     {11, 12},\n  // });\n  A a_6_with_new_line[6] = {\n    {1, 2}, {3, 4}, {5, 6},\n    {7, 8}, {9, 10}, {11, 12}\n  };\n  std::ignore = a_6_with_new_line[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_5_with_trailing_comma = std::to_array<A, 5>({\n  //     {1, 2},\n  //     {3, 4},\n  //     {5, 6},\n  //     {7, 8},\n  //     {9, 10},\n  // });\n  A a_5_with_trailing_comma[5] = {\n      {1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10},\n  };\n  std::ignore = a_5_with_trailing_comma[UnsafeIndex()];\n\n  // Expected rewrite:\n  // auto a_5_with_trailing_comma_2 = std::to_array<A, 5>({\n  //     {1, 2},\n  //     {3, 4},\n  //     {5, 6},\n  //     {7, 8},\n  //     {9, 10},\n  // });\n  A a_5_with_trailing_comma_2[5] = {\n       {1, 2},\n       {3, 4},\n       {5, 6},\n       {7, 8},\n       {9, 10},\n  };\n  std::ignore = a_5_with_trailing_comma_2[UnsafeIndex()];\n}\n",
        "file_path": "/usr/local/google/home/keishi/chromium2/src/tools/clang/spanify/tests/trailing-comma-original.cc"
    }
}